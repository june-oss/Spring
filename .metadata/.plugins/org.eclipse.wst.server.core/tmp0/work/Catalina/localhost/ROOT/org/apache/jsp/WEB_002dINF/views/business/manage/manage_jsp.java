/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-22 08:20:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.business.manage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class manage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1605067212452L));
    _jspx_dependants.put("jar:file:/Users/hyeonjung/Documents/Coding/spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/dealight_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/Users/hyeonjung/Documents/Coding/spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/dealight_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- ÎèôÏù∏ Ï∂îÍ∞Ä -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Îß§Ïû• Í¥ÄÎ¶¨</title>\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n");
      out.write("<script src=\"/resources/js/Chart.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/manage.css?ver=1\" type =\"text/css\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"main_box\"><!-- main box -->\n");
      out.write("        <h2>Business Manage Main Page</h2>\n");
      out.write("        <div class=\"board\"> <!-- board -->\n");
      out.write("            <div class=\"board_top_box\"> <!-- top box -->\n");
      out.write("\n");
      out.write("                <div class=\"cur_time\"> <!-- cur time -->\n");
      out.write("                \n");
      out.write("                <div class=\"js-clock clock\">\n");
      out.write("                        <h6>ÌòÑÏû¨ ÎÇ†Ïßúüóì</h6>\n");
      out.write("                        <h3 class=\"date\"></h3>\n");
      out.write("                        <h6>ÌòÑÏû¨ ÏãúÍ∞Ñ‚è∞</h6>\n");
      out.write("                        <h3 class=\"time\" style=\"color : blue\">00:00</h3>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                </div> <!-- end time -->\n");
      out.write("                <div class=\"light\"> <!-- light -->\n");
      out.write("                    <h4>ÌòÑÏû¨ Ï∞©ÏÑù ÏÉÅÌÉúüí∫</h4>\n");
      out.write("                    <ul class=\"storeSeatStus\"></ul>\n");
      out.write("                    <form id=\"seatStusForm\" action=\"/business/manage/board/seat\"\n");
      out.write("                            method=\"put\">\n");
      out.write("                            <input name=\"seatStusColor\" id=\"color_value\" value=\"\" hidden>\n");
      out.write("                            <input name=\"storeId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" hidden>\n");
      out.write("                            <button class=\"btn_seat_stus\">Green</button>\n");
      out.write("                            <button class=\"btn_seat_stus\">Yellow</button>\n");
      out.write("                            <button class=\"btn_seat_stus\">Red</button>\n");
      out.write("                            </br>\n");
      out.write("                    </form>\n");
      out.write("                </div> <!-- end light -->\n");
      out.write("                <div class=\"top_box_blank\"></div>\n");
      out.write("                <div class=\"toggle\"> <!-- toggle -->\n");
      out.write("                    <label class=\"switch\">\n");
      out.write("                        <button>Toggle Button</button>\n");
      out.write("                      </label>\n");
      out.write("                </div> <!-- end toggle -->\n");
      out.write("\n");
      out.write("         </div> <!-- end top box -->\n");
      out.write("\n");
      out.write("         <div id=\"rsvd_rslt_baord\" style=\"display : none\">\n");
      out.write("            <h1>ÎãπÏùº ÏòàÏïΩ Í≤∞Í≥ºüíµ</h1>\n");
      out.write("            <ul class=\"rsvdRslt\"></ul>\n");
      out.write("            <h1>ÏµúÍ∑º 7Ïùº Trendüìà</h1>\n");
      out.write("            <canvas id=\"rsvd_chart\"></canvas>\n");
      out.write("            <h1>ÏµúÍ∑º 7Ïùº ÏòàÏïΩ ÌòÑÌô©</h1>            \n");
      out.write("            <ul class=\"last_week_rsvd\"></ul>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div id=\"board\">\n");
      out.write("        <!--  \n");
      out.write("            <h1>Îß§Ïû• Ï†ïÎ≥¥üè™</h1>\n");
      out.write("            <ul class=\"store\"></ul>\n");
      out.write("\n");
      out.write("            <h2>Îß§Ïû• ÏÇ¨ÏßÑ</h2>\n");
      out.write("            <div class='uploadResult'>\n");
      out.write("                <ul>\n");
      out.write("                </ul>\n");
      out.write("            </div>  --><!-- uploadResult --><!--\n");
      out.write("            \n");
      out.write("            <div class='bigPictureWrapper'>\n");
      out.write("                <div class='bigPicture'>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write(" \t\t-->\n");
      out.write("            <div class=\"next_wait\"> <!-- next wait -->\n");
      out.write("                <h4>Îã§Ïùå Ïõ®Ïù¥ÌåÖ Ï†ïÎ≥¥üëâ</h4>\n");
      out.write("\t            <ul class=\"nextWait\"></ul>\n");
      out.write("                <div class=\"btn_wait_wrapper\">\n");
      out.write("                    <button class=\"btn_wait_stus btn_enter_wait\">ÏûÖÏû•</button>\n");
      out.write("                    <button class=\"btn_wait_stus btn_noshow_wait\">ÎÖ∏Ïáº</button>\n");
      out.write("                </div>\n");
      out.write("            </div> <!-- end next wait -->\n");
      out.write("            <div class=\"next_rsvd\"> <!-- next rsvd -->\n");
      out.write("                <h4>Îã§Ïùå ÏòàÏïΩÏûê Ï†ïÎ≥¥üëâ</h4>\n");
      out.write("                <ul class=\"nextRsvd\"></ul>\n");
      out.write("            </div> <!-- end next rsvd -->\n");
      out.write("            <div class=\"wait_board\"> <!-- wait board -->\n");
      out.write("            <div class=\"rsvd_wrapper\">\n");
      out.write("                    <div class=\"rsvd\"> <!-- wait  -->\n");
      out.write("                        <h1>ÏòàÏïΩ Î¶¨Ïä§Ìä∏üóí</h1>\n");
      out.write("                        <ul class=\"rsvdList\"></ul>\n");
      out.write("                    </div> <!-- end wait -->\n");
      out.write("            </div>\n");
      out.write("            <div class=\"wait_wrapper\">\n");
      out.write("                <h1>Ïõ®Ïù¥ÌåÖ Î¶¨Ïä§Ìä∏üóí</h1>\n");
      out.write("\t            <ul class=\"waitList\">\n");
      out.write("\t            \n");
      out.write("\t            </ul>\n");
      out.write("            </div>\n");
      out.write("                <di class=\"wait_register_wrapper\">\n");
      out.write("                    <button class=\"btn_wait_register\">Ïò§ÌîÑÎùºÏù∏ Ïõ®Ïù¥ÌåÖ Îì±Î°ù</button>\n");
      out.write("                </div><!-- end wait board -->\n");
      out.write("                <p id=\"dealhistory\"><a href=\"/business/manage/dealhistory?storeId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Ìï´Îîú ÌûàÏä§ÌÜ†Î¶¨</a></p>\n");
      out.write("                <p id=\"modify\"><a href=\"/business/manage/modify?storeId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Îß§Ïû• Ï†ïÎ≥¥ ÏàòÏ†ï</a></p>\n");
      out.write("                <div id=\"map_wrapper\">\n");
      out.write("                \t<h4>ÏãúÍ∞ÑÎåÄÎ≥Ñ ÏòàÏïΩ</h4>\n");
      out.write("\t            \t<ul class=\"rsvdMap\"></ul>\n");
      out.write("\t            </div>\n");
      out.write("            </div> <!-- end board -->\n");
      out.write("        </div>\n");
      out.write("            <div class=\"rsvd_time_bar\"> <!-- rsvd time bar -->\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("                <div class=\"rsvd_time\"></div>\n");
      out.write("            </div> <!-- end rsvd time bar -->\n");
      out.write("        </div> <!-- end main box -->\n");
      out.write("        <div class=\"info_box\"> <!--  info box -->\n");
      out.write("        \n");
      out.write("                    <h1>Îß§Ïû• Ï†ïÎ≥¥üè™</h1>\n");
      out.write("            <ul class=\"store\"></ul>\n");
      out.write("\n");
      out.write("            <h2>Îß§Ïû• ÏÇ¨ÏßÑ</h2>\n");
      out.write("            <div class='uploadResult'>\n");
      out.write("                <ul>\n");
      out.write("                </ul>\n");
      out.write("            </div> <!-- uploadResult -->\n");
      out.write("            \n");
      out.write("            <div class='bigPictureWrapper'>\n");
      out.write("                <div class='bigPicture'>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <h2>Ïò§Îäò ÏòàÏïΩ ÌöåÏõê</h2>\n");
      out.write("\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\n");
      out.write("\t");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        </div> <!-- end info box -->\n");
      out.write("        \t<!-- The Modal -->\n");
      out.write("\t<div id=\"myModal\" class=\"modal\">\n");
      out.write("\t\t<!-- Modal content -->\n");
      out.write("\t\t<div class=\"modal-content\">\n");
      out.write("\t\t\t<ul class=\"rsvdDtls\"></ul>\n");
      out.write("\t\t\t<ul class=\"userRsvdList\"></ul>\n");
      out.write("\t\t\t<ul class=\"waiting_registerForm\"></ul>\n");
      out.write("\t\t\t<span class=\"close\">&times;</span>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("    \n");
      out.write("<script>\n");
      out.write("\tconsole.log(\"modal module.............\")\n");
      out.write("\t// Get the modal\n");
      out.write("\tconst modal = $(\"#myModal\"),\n");
      out.write("\t\tbtn_modal = $(\"#myBtn\"),\n");
      out.write("\t\tclose = $(\".close\"),\n");
      out.write("\t\tbtn_show_board = $(\"#btn_show_board\");\n");
      out.write("\n");
      out.write("\n");
      out.write("// When the user clicks on the button, open the modal\n");
      out.write("btn_modal.on(\"click\",(e) => {\n");
      out.write("\tconsole.log(\"btn click........\");\n");
      out.write("})\n");
      out.write("\n");
      out.write("close.on(\"click\", (e) => {\n");
      out.write("\tconsole.log(\"close click........\");\n");
      out.write("\tmodal.css(\"display\",\"none\");\n");
      out.write("\tmodal.find(\"ul\").html(\"\");\n");
      out.write("})\n");
      out.write("\n");
      out.write("window.onclick = e => {\n");
      out.write("\tif(e.target == modal){\n");
      out.write("\t\tmodal.css(\"display\",\"block\");\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("// When the user clicks anywhere outside of the modal, close it\n");
      out.write("window.onclick = function(event) {\n");
      out.write("  if (event.target == modal) {\n");
      out.write("    modal.style.display = \"none\";\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\t<script>\n");
      out.write("\n");
      out.write("    console.log(\"board module........\");\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    /*\n");
      out.write("    REST Î∞©ÏãùÏúºÎ°ú ÏÑúÎ≤ÑÏôÄ ÌÜµÏã†\n");
      out.write("    \n");
      out.write("    */\n");
      out.write("    let boardService = (() => {\n");
      out.write("      \n");
      out.write("    \t\n");
      out.write("        /*put Ìï®Ïàò*/\n");
      out.write("        \n");
      out.write("        function putChangeStatusCd(params,callback,error) {\n");
      out.write("        \t\n");
      out.write("        \tlet storeId = params.storeId,\n");
      out.write("        \t\tseatStusCd = params.seatStusCd;\n");
      out.write("        \t\n");
      out.write("            $.ajax({\n");
      out.write("                type:'put',\n");
      out.write("                url:'/business/manage/board/seat/'+storeId+'/'+seatStusCd,\n");
      out.write("                data : {},\n");
      out.write("                contentType : \"application/json\",\n");
      out.write("                success : function(result, status, xhr) {\n");
      out.write("                    if(callback) {\n");
      out.write("                        callback(result);\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error : function(xhr, status, er) {\n");
      out.write("                    if(error) {\n");
      out.write("                        error(er);\n");
      out.write("                    }               \n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            }\n");
      out.write("        \n");
      out.write("        function putNoshowWaiting(waitId,callback,error) {\n");
      out.write("            $.ajax({\n");
      out.write("                type:'put',\n");
      out.write("                url:'/business/manage/board/waiting/noshow/' + waitId,\n");
      out.write("                data : {waitId:waitId},\n");
      out.write("                contentType : \"application/json\",\n");
      out.write("                success : function(result, status, xhr) {\n");
      out.write("                    if(callback) {\n");
      out.write("                        callback(result);\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error : function(xhr, status, er) {\n");
      out.write("                    if(error) {\n");
      out.write("                        error(er);\n");
      out.write("                    }               \n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            }\n");
      out.write("    \n");
      out.write("        function putEnterWaiting(waitId,callback,error) {\n");
      out.write("    \n");
      out.write("            $.ajax({\n");
      out.write("                type:'put',\n");
      out.write("                url:'/business/manage/board/waiting/enter/' + waitId,\n");
      out.write("                data : {waitId:waitId},\n");
      out.write("                contentType : \"application/json\",\n");
      out.write("                success : function(result, status, xhr) {\n");
      out.write("                    if(callback) {\n");
      out.write("                        callback(result);\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error : function(xhr, status, er) {\n");
      out.write("                    if(error) {\n");
      out.write("                        error(er);\n");
      out.write("                    }               \n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            }\n");
      out.write("    \n");
      out.write("        function putCancelWaiting(waitId,callback,error) {\n");
      out.write("    \n");
      out.write("            $.ajax({\n");
      out.write("                type:'put',\n");
      out.write("                url:'/business/manage/board/waiting/cancel/' + waitId,\n");
      out.write("                data : {waitId:waitId},\n");
      out.write("                contentType : \"application/json\",\n");
      out.write("                success : function(result, status, xhr) {\n");
      out.write("                    if(callback) {\n");
      out.write("                        callback(result);\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error : function(xhr, status, er) {\n");
      out.write("                    if(error) {\n");
      out.write("                        error(er);\n");
      out.write("                    }               \n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("        }\n");
      out.write("    \n");
      out.write("        /*get Ìï®Ïàò*/\n");
      out.write("        \n");
      out.write("        function getRsvdDtls(param,callback,error) {\n");
      out.write("        \t\n");
      out.write("        \tlet rsvdId = param.rsvdId;\n");
      out.write("        \t\n");
      out.write("        \t$.getJSON(\"/business/manage/board/reservation/dtls/\" + rsvdId + \".json\",\n");
      out.write("        \t\tfunction(data) {\n");
      out.write("        \t\t\tif(callback) {\n");
      out.write("        \t\t\t\tcallback(data);\n");
      out.write("        \t\t\t}\n");
      out.write("        \t}).fail(function(xhr,status,err){\n");
      out.write("        \t\tif(error) {\n");
      out.write("        \t\t\terror();\n");
      out.write("        \t\t}\n");
      out.write("        \t});\n");
      out.write("        \t\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("\t\tfunction getUserRsvdList(param,callback,error) {\n");
      out.write("        \t\n");
      out.write("        \tlet storeId = param.storeId,\n");
      out.write("        \t\tuserId = param.userId;\n");
      out.write("        \t\n");
      out.write("        \tconsole.log(storeId);\n");
      out.write("        \tconsole.log(userId);\n");
      out.write("        \t\n");
      out.write("        \t$.getJSON(\"/business/manage/board/reservation/list/\" + storeId +\"/\" + userId + \".json\",\n");
      out.write("        \t\tfunction(data) {\n");
      out.write("        \t\t\tif(callback) {\n");
      out.write("        \t\t\t\tcallback(data);\n");
      out.write("        \t\t\t}\n");
      out.write("        \t}).fail(function(xhr,status,err){\n");
      out.write("        \t\tif(error) {\n");
      out.write("        \t\t\terror();\n");
      out.write("        \t\t}\n");
      out.write("        \t});\n");
      out.write("        \t\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        \n");
      out.write("\t\tfunction getRsvdRslt(param,callback,error) {\n");
      out.write("            \n");
      out.write("            let storeId = param.storeId;\n");
      out.write("            \n");
      out.write("            $.getJSON(\"/business/manage/board/reservation/rslt/\"+storeId+\".json\",\n");
      out.write("                function(data){\n");
      out.write("                        if(callback){\n");
      out.write("                            callback(data);\n");
      out.write("                        }\n");
      out.write("                    }).fail(function(xhr,status,err){\n");
      out.write("                        if(error){\n");
      out.write("                            error();\n");
      out.write("                        }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function getRsvdList(param,callback,error) {\n");
      out.write("            \n");
      out.write("            let storeId = param.storeId;\n");
      out.write("            \n");
      out.write("            let rsvdList = $.getJSON(\"/business/manage/board/reservation/\"+storeId+\".json\",\n");
      out.write("                function(data){\n");
      out.write("                        if(callback){\n");
      out.write("                            callback(data);\n");
      out.write("                        }\n");
      out.write("                    }).fail(function(xhr,status,err){\n");
      out.write("                        if(error){\n");
      out.write("                            error();\n");
      out.write("                        }\n");
      out.write("            });\n");
      out.write("    \t\n");
      out.write("            \n");
      out.write("            return rsvdList;\n");
      out.write("        }\n");
      out.write("    \n");
      out.write("        function getWaitList(param,callback,error) {\n");
      out.write("            \n");
      out.write("            let storeId = param.storeId;\n");
      out.write("            \n");
      out.write("            let waitList = $.getJSON(\"/business/manage/board/waiting/\"+storeId+\".json\",\n");
      out.write("                function(data){\n");
      out.write("                        if(callback){\n");
      out.write("                            callback(data);\n");
      out.write("                        }\n");
      out.write("                    }).fail(function(xhr,status,err){\n");
      out.write("                        if(error){\n");
      out.write("                            error();\n");
      out.write("                        }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            return waitList;\n");
      out.write("        }\n");
      out.write("    \n");
      out.write("        /*ÌòÑÏû¨ Îì§Ïñ¥Ïò® Îß§Ïû• */\n");
      out.write("        function getStore(param,callback,error) {\n");
      out.write("            \n");
      out.write("            let storeId = param.storeId;\n");
      out.write("    \n");
      out.write("            $.getJSON(\"/business/manage/board/store/\"+storeId+\".json\",\n");
      out.write("                    function(data){\n");
      out.write("                        if(callback){\n");
      out.write("                            callback(data);\n");
      out.write("                        }\n");
      out.write("                    }).fail(function(xhr,status,err){\n");
      out.write("                        if(error){\n");
      out.write("                            error();\n");
      out.write("                        }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function getNextWait(waitList){\n");
      out.write("            if(!waitList){\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("                       \n");
      out.write("            return waitList.filter(wait => {return wait.waitStusCd === 'W'})\n");
      out.write("                    .sort((w1,w2) => { return w1.waitId - w2.waitId})[0];\n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        function getTodayRsvdMap(param,callback,error){\n");
      out.write("      \n");
      out.write("        \tlet storeId = param.storeId;\n");
      out.write("        \t\n");
      out.write("        \t$.getJSON(\"/business/manage/board/reservation/map/\"+ storeId +\".json\",\n");
      out.write("                    function(data){\n");
      out.write("                        if(callback){\n");
      out.write("                            callback(data);\n");
      out.write("                        }\n");
      out.write("                    }).fail(function(xhr,status,err){\n");
      out.write("                        if(error){\n");
      out.write("                            error();\n");
      out.write("                        }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        function getNextRsvd(param,callback,error){\n");
      out.write("        \t\n");
      out.write("        \t\n");
      out.write("        \tlet storeId = param.storeId;\n");
      out.write("        \t\n");
      out.write("        \t\n");
      out.write("        \t$.getJSON(\"/business/manage/board/reservation/next/\"+ storeId +\".json\",\n");
      out.write("                    function(data){\n");
      out.write("                        if(callback){\n");
      out.write("                            callback(data);\n");
      out.write("                        }\n");
      out.write("                    }).fail(function(xhr,status,err){\n");
      out.write("                        if(error){\n");
      out.write("                            error();\n");
      out.write("                        }\n");
      out.write("            });\n");
      out.write("        };\n");
      out.write("    \n");
      out.write("        function regWait(wait, callback,error) {\n");
      out.write("    \n");
      out.write("            $.ajax({\n");
      out.write("                type : 'post',\n");
      out.write("                url : '/business/manage/board/waiting/new',\n");
      out.write("                data : JSON.stringify(wait),\n");
      out.write("                contentType : \"application/json; charset=utf-8\",\n");
      out.write("                success : function(result, status, xhr) {\n");
      out.write("                    if(callback) {\n");
      out.write("                        callback(result);\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error : function(xhr, status, er) {\n");
      out.write("                    if(error) {\n");
      out.write("                        error(er);\n");
      out.write("                    }               \n");
      out.write("                }\n");
      out.write("            })\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function getLastWeekRsvd(param, callback,error) {\n");
      out.write("        \t\n");
      out.write("\t\t\tlet storeId = param.storeId;\n");
      out.write("        \t\n");
      out.write("        \t$.getJSON(\"/business/manage/board/reservation/rslt/\"+ storeId +\"/list.json\",\n");
      out.write("                    function(data){\n");
      out.write("        \t\t\t\t\tconsole.log(data);\n");
      out.write("                        if(callback){\n");
      out.write("                            callback(data);\n");
      out.write("                        }\n");
      out.write("                    }).fail(function(xhr,status,err){\n");
      out.write("                        if(error){\n");
      out.write("                            error();\n");
      out.write("                        }\n");
      out.write("            });\n");
      out.write("        \t\n");
      out.write("        \t\n");
      out.write("        }\n");
      out.write("    \n");
      out.write("        return {\n");
      out.write("            regWait:regWait,\n");
      out.write("            getStore : getStore,\n");
      out.write("            getWaitList : getWaitList,\n");
      out.write("            getRsvdList : getRsvdList,\n");
      out.write("            putCancelWaiting : putCancelWaiting,\n");
      out.write("            putNoshowWaiting : putNoshowWaiting,\n");
      out.write("            putEnterWaiting : putEnterWaiting,\n");
      out.write("            putChangeStatusCd : putChangeStatusCd,\n");
      out.write("            getNextWait : getNextWait,\n");
      out.write("            getNextRsvd : getNextRsvd,\n");
      out.write("            getTodayRsvdMap : getTodayRsvdMap,\n");
      out.write("            getRsvdRslt : getRsvdRslt,\n");
      out.write("            getUserRsvdList : getUserRsvdList,\n");
      out.write("            getRsvdDtls : getRsvdDtls,\n");
      out.write("            getLastWeekRsvd : getLastWeekRsvd\n");
      out.write("        };\n");
      out.write("    })();\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    /*\n");
      out.write("    \tÏÑúÎ≤ÑÍ∞Ä ÏãúÏûë ÎêòÎ©¥ ÎèôÏûëÌïòÎäî ÏΩîÎìú\n");
      out.write("    */\n");
      out.write("    $(document).ready(() => {\n");
      out.write("        const storeId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("        \n");
      out.write("        let seatStusForm = $(\"#seatStusForm\"),\n");
      out.write("        colorVal = $(\"#color_value\"),\n");
      out.write("        storeUL = $(\".store\"),\n");
      out.write("        rsvdListUL = $(\".rsvdList\"),\n");
      out.write("        waitListUL = $(\".waitList\"),\n");
      out.write("        nextWaitUL = $(\".nextWait\"),\n");
      out.write("        nextRsvdUL = $(\".nextRsvd\"),\n");
      out.write("        rsvdMapUL = $(\".rsvdMap\"),\n");
      out.write("        storeSeatUL = $(\".storeSeatStus\"),\n");
      out.write("        rsvdRsltUL = $(\".rsvdRslt\"),\n");
      out.write("        userRsvdListUL = $(\".userRsvdList\"),\n");
      out.write("        rsvdDtlsUL = $(\".rsvdDtls\"),\n");
      out.write("        waitRegFormUL = $(\".waiting_registerForm\"),\n");
      out.write("        lastWeekRsvdUL = $(\".last_week_rsvd\")\n");
      out.write("        ;\n");
      out.write("            \n");
      out.write("        showBoard(storeId); \n");
      out.write("        getTime();\n");
      out.write("        setInterval(getTime, 1000);\n");
      out.write("        //showUserRsvdList(storeId,'kim'); test\n");
      out.write("\n");
      out.write("        /*\n");
      out.write("        \tboardÎ•º Î≥¥Ïó¨Ï§ÄÎã§.\n");
      out.write("        \t\n");
      out.write("        */\n");
      out.write("        function showBoard(storeId) {\n");
      out.write("            \n");
      out.write("            boardService.getStore({storeId : storeId}, function (store) {\n");
      out.write("                let str = \"\";\n");
      out.write("                if(store == null){\n");
      out.write("                    storeUL.html(\"\");\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                str += \"<li>Îß§Ïû•Î≤àÌò∏ : \" + store.storeId + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû•Ïù¥Î¶Ñ : \" + store.storeNm + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• Ïó∞ÎùΩÏ≤ò : \" + store.telno + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• ÏàòÏö©Ïù∏Ïõê : \" + store.bstore.acmPnum + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• ÌèâÍ∑†ÏãùÏÇ¨ÏãúÍ∞Ñ : \" + store.bstore.avgMealTm + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• Î∏åÎ†àÏù¥ÌÅ¨Ï¢ÖÎ£åÏãúÍ∞Ñ : \" + store.bstore.breakEntm + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• Î∏åÎ†àÏù¥ÌÅ¨ÏãúÏûëÏãúÍ∞Ñ : \" + store.bstore.breakSttm + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• Í¥ÄÎ¶¨Ïûê ÏïÑÏù¥Îîî : \" + store.bstore.buserId + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• ÏòÅÏóÖÏ¢ÖÎ£åÏãúÍ∞Ñ : \" + store.bstore.closeTm + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• Ìú¥Î¨¥Ïùº : \" + store.bstore.hldy + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• ÎùºÏä§Ìä∏Ïò§ÎçîÏãúÍ∞Ñ : \" + store.bstore.lastOrdTm + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• Î©îÎâ¥ : \" + store.bstore.menus + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• 1Ïù∏ÏÑù : \" + store.bstore.n1SeatNo + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• 2Ïù∏ÏÑù : \" + store.bstore.n2SeatNo + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• 4Ïù∏ÏÑù : \" + store.bstore.n4SeatNo + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• ÏãúÏûëÏãúÍ∞Ñ : \" + store.bstore.openTm + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• Ï∞©ÏÑùÏÉÅÌÉú : \" + store.bstore.seatStusCd + \"</li>\";\n");
      out.write("                str += \"<li>Îß§Ïû• ÏÜåÍ∞ú : \" + store.bstore.storeIntro + \"</li>\";\n");
      out.write("                \n");
      out.write("                storeUL.html(str);\n");
      out.write("                \n");
      out.write("                /*Ï∞©ÏÑù ÏÉÅÌÉú*/\n");
      out.write("                storeSeatUL.html(\"<li>\"+ store.bstore.seatStusCd +\"</li>\")\n");
      out.write("            });\n");
      out.write("    \n");
      out.write("            \n");
      out.write("            boardService.getWaitList({storeId:storeId}, function (waitList) {\n");
      out.write("                let strWaitList = \"\";\n");
      out.write("                if(waitList == null){\n");
      out.write("                    waitList.html(\"\");\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                console.log('wait list................' + waitList);\n");
      out.write("                \n");
      out.write("                waitList.forEach(wait => {\n");
      out.write("                \tstrWaitList += \"<div class='wait'>\";\n");
      out.write("                    strWaitList += \"<ul>\" + \"<a href='/business/waiting/\"+wait.waitId+\"'><h3>Ïõ®Ïù¥ÌåÖ Î≤àÌò∏ : \"+wait.waitId+\"</h3></a>\";\n");
      out.write("                        strWaitList += \"<li>Ïõ®Ïù¥ÌåÖ ÌöåÏõê ÏïÑÏù¥Îîî : \"+ wait.userId + \"</li>\";\n");
      out.write("                        strWaitList += \"<li>Ïõ®Ïù¥ÌåÖ Îß§Ïû• Î≤àÌò∏ : \"+ wait.storeId + \"</li>\";\n");
      out.write("                        strWaitList += \"<li>Ïõ®Ïù¥ÌåÖ Ïù∏Ïõê : \"+ wait.waitPnum + \"</li>\";\n");
      out.write("                        strWaitList += \"<li>Ïõ®Ïù¥ÌåÖ Îì±Î°ù ÏãúÍ∞Ñ : \"+ wait.waitRegTm.toString() + \"</li>\";\n");
      out.write("                        strWaitList += \"<li>Ïõ®Ïù¥ÌåÖ ÏÉÅÌÉú : \"+ wait.waitStusCd + \"</li>\";\n");
      out.write("                        strWaitList += \"<li>Ïõ®Ïù¥ÌåÖ ÌöåÏõê Ïù¥Î¶Ñ : \"+ wait.custNm + \"</li>\";\n");
      out.write("                        strWaitList += \"<li>Ïõ®Ïù¥ÌåÖ ÌöåÏõê Î≤àÌò∏ : \"+ wait.custTelno + \"</li>\";\n");
      out.write("                    strWaitList += \"</ul>\"\n");
      out.write("                    strWaitList += \"<button class='btn_wait_call'>Ìò∏Ï∂ú</button>\";\n");
      out.write("                    strWaitList += \"</div>\";\n");
      out.write("                });\n");
      out.write("    \n");
      out.write("              waitListUL.html(strWaitList);   \n");
      out.write("              \n");
      out.write("              \n");
      out.write("              let nextWait = boardService.getNextWait(waitList);\n");
      out.write("              \n");
      out.write("              console.log(nextWait);\n");
      out.write("              \n");
      out.write("              let strNextWait = \"\";\n");
      out.write("              \n");
      out.write("              if(nextWait){\n");
      out.write("              \n");
      out.write("              strNextWait += \"<li> ÎåÄÍ∏∞Ïûê Ïù¥Î¶Ñ : \"+nextWait.custNm+\"</li>\";\n");
      out.write("              strNextWait += \"<li> ÎåÄÍ∏∞Ïûê Ïó∞ÎùΩÏ≤ò : \"+nextWait.custTelno+\"</li>\";\n");
      out.write("              strNextWait += \"<li> Ïõ®Ïù¥ÌåÖ Î≤àÌò∏ :\"+nextWait.waitId+\"</li>\";\n");
      out.write("              strNextWait += \"<li> Ïõ®Ïù¥ÌåÖ Îì±Î°ù ÏãúÍ∞Ñ :\"+nextWait.time+\"</li>\";\n");
      out.write("              strNextWait += \"<li> Îß§Ïû• Î≤àÌò∏ : \"+nextWait.storeId+\"</li>\";\n");
      out.write("              strNextWait += \"<li> ÌöåÏõê ÏïÑÏù¥Îîî : \"+nextWait.userId+\"</li>\";\n");
      out.write("              strNextWait += \"<li> Ïõ®Ïù¥ÌåÖ Ïù∏Ïõê : \"+nextWait.waitPnum+\"</li>\";\n");
      out.write("              strNextWait += \"<li> Ïõ®Ïù¥ÌåÖ Îì±Î°ù ÏãúÍ∞Ñ : \"+nextWait.waitRegTm+\"</li>\";\n");
      out.write("              strNextWait += \"<li> Ïõ®Ïù¥ÌåÖ ÏÉÅÌÉú : \"+nextWait.waitStusCd+\"</li>\";\n");
      out.write("              }\n");
      out.write("              nextWaitUL.html(strNextWait);\n");
      out.write("    \n");
      out.write("            }); \n");
      out.write("    \n");
      out.write("            boardService.getRsvdList({storeId:storeId}, function (rsvdList) {\n");
      out.write("                let strRsvdList = \"\";\n");
      out.write("                if(rsvdList == null){\n");
      out.write("                    rsvdList.html(\"\");\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                rsvdList.forEach(rsvd => {\n");
      out.write("                \tstrRsvdList += \"<div class='rsvd'>\" ;\n");
      out.write("                    strRsvdList += \"<ul class='btnRsvd'>\" + \"<h3>ÏòàÏïΩ Î≤àÌò∏ : \"+rsvd.rsvdId+\"</h3>\"; \n");
      out.write("                        strRsvdList += \"<li hidden class='btnStoreId'>\"+rsvd.storeId+\"</li>\";\n");
      out.write("                        strRsvdList += \"<li hidden class='btnUserId'>\"+rsvd.userId+\"</li>\";\n");
      out.write("                        strRsvdList += \"<li>Îß§Ïû•Î≤àÌò∏ : \"+ rsvd.storeId + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÌöåÏõê ÏïÑÏù¥Îîî : \"+ rsvd.userId + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>Ìï´Îîú Î≤àÌò∏ :\"+ rsvd.htdlId + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÏäπÏù∏ Î≤àÌò∏ : \"+ rsvd.aprvNo + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÏòàÏïΩ Ïù∏Ïõê : \"+ rsvd.pnum + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÏòàÏïΩ ÏãúÍ∞Ñ : \"+ rsvd.time + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÏòàÏïΩ ÏÉÅÌÉú : \"+ rsvd.stusCd + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÏòàÏïΩ Ï¥ù Í∏àÏï° : \"+ rsvd.totAmt + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÏòàÏïΩ Ï¥ù ÏàòÎüâ : \"+ rsvd.totQty + \"</li>\";\n");
      out.write("                        strRsvdList += \"<li>ÏòàÏïΩ Îì±Î°ù ÎÇ†Ïßú : \"+ rsvd.regDate + \"</li>\";\n");
      out.write("                    strRsvdList += \"</ul>\" \n");
      out.write("                    strRsvdList += \"</div>\" ;\n");
      out.write("                });\n");
      out.write("    \n");
      out.write("              rsvdListUL.html(strRsvdList);\n");
      out.write("   \n");
      out.write("            }); \n");
      out.write("            \n");
      out.write("            \n");
      out.write("            strRsvdMap = \"\";\n");
      out.write("            \n");
      out.write("            boardService.getTodayRsvdMap({storeId:storeId}, function(map){\n");
      out.write("            \tlet strRsvdMap = \"\";\n");
      out.write("            \t\n");
      out.write("            \tconsole.log('get today rsvd map .....');\n");
      out.write("            \t\n");
      out.write("            \tif(!map)\n");
      out.write("            \t\treturn;\n");
      out.write("            \tObject.entries(map).forEach(([key,value]) => {\n");
      out.write("            \t\tstrRsvdMap += \"<li class='tooltip'>\"+key + \" : ÏòàÏïΩÎ≤àÌò∏[\" + value+\"] <span class='tooltiptext'>\"+value+\"Î≤àÌò∏ ÏïàÎÖï?</span></li></br>\";\n");
      out.write("            \t})\n");
      out.write("            \t\n");
      out.write("            \trsvdMapUL.html(strRsvdMap);\n");
      out.write("            \t\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            boardService.getNextRsvd({storeId:storeId},function(rsvd){\n");
      out.write("            \t\n");
      out.write("            \tconsole.log('getnextrsvd.............');\n");
      out.write("            \tconsole.log(rsvd);\n");
      out.write("            \t\n");
      out.write("        \t\tlet strNextRsvd = \"\";\n");
      out.write("        \t\tif(!rsvd)\n");
      out.write("        \t\t\treturn;\n");
      out.write("                strNextRsvd += \"<li>ÏòàÏïΩ Î≤àÌò∏ : \"+rsvd.rsvdId+\"</li>\"; \n");
      out.write("                strNextRsvd += \"<li>Îß§Ïû•Î≤àÌò∏ : \"+ rsvd.storeId + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÌöåÏõê ÏïÑÏù¥Îîî : \"+ rsvd.userId + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>Ìï´Îîú Î≤àÌò∏ :\"+ rsvd.htdlId + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÏäπÏù∏ Î≤àÌò∏ : \"+ rsvd.aprvNo + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÏòàÏïΩ Ïù∏Ïõê : \"+ rsvd.pnum + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÏòàÏïΩ ÏãúÍ∞Ñ : \"+ rsvd.time + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÏòàÏïΩ ÏÉÅÌÉú : \"+ rsvd.stusCd + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÏòàÏïΩ Ï¥ù Í∏àÏï° : \"+ rsvd.totAmt + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÏòàÏïΩ Ï¥ù ÏàòÎüâ : \"+ rsvd.totQty + \"</li>\";\n");
      out.write("                strNextRsvd += \"<li>ÏòàÏïΩ Îì±Î°ù ÎÇ†Ïßú\"+ rsvd.regDate + \"</li>\";\n");
      out.write("                \n");
      out.write("                nextRsvdUL.html(strNextRsvd);\n");
      out.write("        \t});\n");
      out.write("  \n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        function showRsvdBoard(storeId) {\n");
      out.write("        \t\n");
      out.write("        \tboardService.getRsvdRslt({storeId:storeId}, function(dto){\n");
      out.write("        \t\tlet strRsvdRslt = \"\";\n");
      out.write("        \t\tif(!dto)\n");
      out.write("        \t\t\treturn;\n");
      out.write("        \t\t\n");
      out.write("        \t\tstrRsvdRslt += \"<li>Ïò§Îäò Ï¥ù ÏòàÏïΩ Ïàò : \" + dto.totalTodayRsvd  +\"</li>\";\n");
      out.write("        \t\tstrRsvdRslt += \"<li>Ïò§Îäò Ï¥ù ÏòàÏïΩ Ïù∏Ïõê : \" + dto.totalTodayRsvdPnum  +\"</li>\";\n");
      out.write("        \t\tstrRsvdRslt += \"<li>[Ïò§ÎäòÏùò Ïù∏Í∏∞ Î©îÎâ¥]</li>\";\n");
      out.write("        \t\tObject.entries(dto.todayFavMenuMap).forEach(([key,value]) => {\n");
      out.write("\t        \t\tstrRsvdRslt += \"<li>\" + key +' : '+ value  +\"</li>\";\n");
      out.write("        \t\t})\n");
      out.write("        \t\t\n");
      out.write("        \t\trsvdRsltUL.html(strRsvdRslt);\n");
      out.write("        \t\t\n");
      out.write("        \t});\n");
      out.write("        \t\n");
      out.write("        \tlet dateArr = new Array();\n");
      out.write("        \t\n");
      out.write("        \tlet today = new Date();\n");
      out.write("        \tlet year, month, date;\n");
      out.write("        \t\n");
      out.write("        \tfor(let i = 0; i < 7; i++) {\n");
      out.write("        \t\tyear =  today.getFullYear();\n");
      out.write("        \t\tmonth = (today.getMonth() + 1);\n");
      out.write("        \t\tdate = today.getDate();\n");
      out.write("        \t\tdateArr[i] =    year + '/' + month + '/' + date;\n");
      out.write("        \t\ttoday.setDate(today.getDate() - 1);\n");
      out.write("        \t}\n");
      out.write("        \t\n");
      out.write("        \t\n");
      out.write("    \t\tlet pnumArr = [0,0,0,0,0,0,0];\n");
      out.write("    \t\tlet amountArr = [0,0,0,0,0,0,0];\n");
      out.write("        \t\n");
      out.write("        \tboardService.getLastWeekRsvd({storeId:storeId}, function(list){\n");
      out.write("        \t\t\n");
      out.write("        \t\tlet strLastWeekRsvd = \"\";\n");
      out.write("        \t\tif(!list)\n");
      out.write("        \t\t\treturn;\n");
      out.write("\t\t\t\t\n");
      out.write("        \t\tconsole.log('Î¶¨Ïä§Ìä∏............' + list);\n");
      out.write("        \t\t\n");
      out.write("        \t\tlist.forEach(rsvd => {\n");
      out.write("        \t\t\t\n");
      out.write("        \t\t\tpnumArr[dateArr.indexOf(rsvd.strRegDate)] += rsvd.pnum;\n");
      out.write("        \t\t\tamountArr[dateArr.indexOf(rsvd.strRegDate)] += rsvd.totAmt;\n");
      out.write("        \t\t\t\n");
      out.write("        \t\t\t//pnumArr[dateArr.indexOf(rsvd.strInDate)].push(rsvd)\n");
      out.write("        \t\t\t\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li hidden class='btnStoreId'>\"+rsvd.storeId+\"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li hidden class='btnUserId'>\"+rsvd.userId+\"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>Îß§Ïû•Î≤àÌò∏ : \"+ rsvd.storeId + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÌöåÏõê ÏïÑÏù¥Îîî : \"+ rsvd.userId + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>Ìï´Îîú Î≤àÌò∏ :\"+ rsvd.htdlId + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÏäπÏù∏ Î≤àÌò∏ : \"+ rsvd.aprvNo + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÏòàÏïΩ Ïù∏Ïõê : \"+ rsvd.pnum + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÏòàÏïΩ ÏãúÍ∞Ñ : \"+ rsvd.time + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÏòàÏïΩ ÏÉÅÌÉú : \"+ rsvd.stusCd + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÏòàÏïΩ Ï¥ù Í∏àÏï° : \"+ rsvd.totAmt + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÏòàÏïΩ Ï¥ù ÏàòÎüâ : \"+ rsvd.totQty + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"<li>ÏòàÏïΩ Îì±Î°ù ÎÇ†Ïßú\"+ rsvd.strInDate + \"</li>\";\n");
      out.write("        \t\t\tstrLastWeekRsvd += \"===========================================\";\n");
      out.write("        \t\t});\n");
      out.write("        \t\t\n");
      out.write("\n");
      out.write("        \t\t\n");
      out.write("        \t\t\n");
      out.write("        \t\tconsole.log(dateArr);\n");
      out.write("        \t\tconsole.log(pnumArr);\n");
      out.write("        \t\tconsole.log(amountArr);\n");
      out.write("        \t\t\n");
      out.write("\t        \tlastWeekRsvdUL.html(strLastWeekRsvd);\n");
      out.write("\t        \tlet chart = document.getElementById('rsvd_chart');\n");
      out.write("\t        \tlet context = chart.getContext('2d'),\n");
      out.write("\t           \trsvdChart = new Chart(context, {\n");
      out.write("\t           \t\ttype : 'line',\n");
      out.write("\t           \t\tdata : {\n");
      out.write("\t           \t\t\tlabels : [dateArr[6], dateArr[5], dateArr[4], dateArr[3], dateArr[2], dateArr[1], dateArr[0]],\n");
      out.write("\t           \t\t\tdatasets : [{\n");
      out.write("\t           \t\t\t\tlabel : 'ÏòàÏïΩ Ïù∏Ïõê',\n");
      out.write("\t           \t\t\t\tlineTension : 0,\n");
      out.write("\t           \t\t\t\tdata : [pnumArr[6], pnumArr[5], pnumArr[4], pnumArr[3], pnumArr[2], pnumArr[1], pnumArr[0]],\n");
      out.write("\t           \t\t\t\tbackgroundColor : \"rgba(153,255,51,0.4)\"\n");
      out.write("\t           \t\t\t}, {\n");
      out.write("\t           \t\t\t\tlabel : \"ÏòàÏïΩ Í∏àÏï°\",\n");
      out.write("\t           \t\t\t\tdata : [amountArr[6],amountArr[5],amountArr[4],amountArr[3],amountArr[2],amountArr[1],amountArr[0]],\n");
      out.write("\t           \t\t\t\tbackgroundColor: \"rgba(255,153,0,0.4)\"\n");
      out.write("\t           \t\t\t}]\n");
      out.write("\t           \t\t}\n");
      out.write("\t           \t});\n");
      out.write("        \t});\n");
      out.write("        \t\n");
      out.write("         \n");
      out.write("        \t\n");
      out.write("        \t\n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        /*\n");
      out.write("        \tÏú†Ï†ÄÏùò ÏòàÏïΩ ÌûàÏä§ÌÜ†Î¶¨Î•º Î≥¥Ïó¨Ï§ÄÎã§.\n");
      out.write("        \n");
      out.write("        */\n");
      out.write("        function showUserRsvdList(storeId,userId){\n");
      out.write("        \t\n");
      out.write("        \tboardService.getUserRsvdList({storeId:storeId,userId:userId}, function(userRsvdList){\n");
      out.write("        \t\t\n");
      out.write("        \t\tlet strUserRsvdList = \"\";\n");
      out.write("        \t\tif(!userRsvdList)\n");
      out.write("        \t\t\treturn;\n");
      out.write("        \t\t\n");
      out.write("        \t\tstrUserRsvdList += \"<h1>ÏòàÏïΩ ÌûàÏä§ÌÜ†Î¶¨</h1>\";\n");
      out.write("        \t\tuserRsvdList.forEach(rsvd => {\n");
      out.write("        \t\t\tstrUserRsvdList += \"========================================\";\n");
      out.write("        \t\t\tstrUserRsvdList += \"<li>ÏòàÏïΩ Î≤àÌò∏ : \"+rsvd.rsvdId+\"</li>\"; \n");
      out.write("                    strUserRsvdList += \"<li>Îß§Ïû•Î≤àÌò∏ : \"+ rsvd.storeId + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÌöåÏõê ÏïÑÏù¥Îîî : \"+ rsvd.userId + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>Ìï´Îîú Î≤àÌò∏ :\"+ rsvd.htdlId + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÏäπÏù∏ Î≤àÌò∏ : \"+ rsvd.aprvNo + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÏòàÏïΩ Ïù∏Ïõê : \"+ rsvd.pnum + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÏòàÏïΩ ÏãúÍ∞Ñ : \"+ rsvd.time + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÏòàÏïΩ ÏÉÅÌÉú : \"+ rsvd.stusCd + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÏòàÏïΩ Ï¥ù Í∏àÏï° : \"+ rsvd.totAmt + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÏòàÏïΩ Ï¥ù ÏàòÎüâ : \"+ rsvd.totQty + \"</li>\";\n");
      out.write("                    strUserRsvdList += \"<li>ÏòàÏïΩ Îì±Î°ù ÎÇ†Ïßú\"+ rsvd.inDate + \"</li>\";\n");
      out.write("        \t\t});\n");
      out.write("        \t\t\n");
      out.write("        \t\tuserRsvdListUL.html(strUserRsvdList);\n");
      out.write("        \t\t\n");
      out.write("        \t\tshowRsvdDtls(userRsvdList[0].rsvdId);\n");
      out.write("        \t\t\n");
      out.write("        \t})\n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        /*\n");
      out.write("        \tÏòàÏïΩ ÏÉÅÏÑ∏Î•º Î≥¥Ïó¨Ï§ÄÎã§.\n");
      out.write("        \n");
      out.write("        */\n");
      out.write("        function showRsvdDtls(rsvdId){\n");
      out.write("        \t\n");
      out.write("        \tconsole.log(\"test1..............\" + rsvdId);\n");
      out.write("        \t\n");
      out.write("        \tboardService.getRsvdDtls({rsvdId:rsvdId}, function(rsvd){\n");
      out.write("        \t\t\n");
      out.write("        \t\tconsole.log(\"test2..............\" + rsvd);\n");
      out.write("        \t\t\n");
      out.write("\t\t\t\tlet strRsvdDtls = \"\";\n");
      out.write("\t\t\t\tif(!rsvd)\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tstrRsvdDtls += \"<h1>Ìï¥Îãπ Ïú†Ï†Ä ÏòàÏïΩ ÏÉÅÏÑ∏</h1>\"\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏòàÏïΩ Î≤àÌò∏ :\" + rsvd.rsvdId +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>Îß§Ïû• Î≤àÌò∏ :\" + rsvd.storeId +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÌöåÏõê ÏïÑÏù¥Îîî : \" + rsvd.userId +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>Ìï´Îîú Î≤àÌò∏ : \" + rsvd.htdlId +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏäπÏù∏ Î≤àÌò∏ : \" + rsvd.aprvNo +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏòàÏïΩ Ïù∏Ïõê : \" + rsvd.pnum +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏòàÏïΩ ÏãúÍ∞Ñ : \" + rsvd.time +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏòàÏïΩ ÏÉÅÌÉú : \" + rsvd.stusCd +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏòàÏïΩ Ï¥ù Í∞ÄÍ≤© : \" + rsvd.totAmt +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏòàÏïΩ Ï¥ù ÏàòÎüâ : \" + rsvd.totQty +\"</li>\";\n");
      out.write("        \t\tstrRsvdDtls += \"<li>ÏòàÏïΩ Îì±Î°ù ÎÇ†Ïßú : \" + rsvd.regTm +\"</li>\";\n");
      out.write("        \t\tlet cnt = 1;\n");
      out.write("        \t\trsvd.rsvdDtlsList.forEach(dtls => {\n");
      out.write("        \t\t\tstrRsvdDtls += \"==============================\";\n");
      out.write("        \t\t\tstrRsvdDtls += \"<li>ÏÉÅÏÑ∏ ÏàúÏÑú [\" + cnt +\"]</li>\";\n");
      out.write("        \t\t\tstrRsvdDtls += \"<li>ÏòàÏïΩ ÏÉÅÏÑ∏ Î≤àÌò∏ : \" + dtls.seq +\"</li>\";\n");
      out.write("        \t\t\tstrRsvdDtls += \"<li>ÏòàÏïΩ Î©îÎâ¥ Ïù¥Î¶Ñ : \" + dtls.menuNm +\"</li>\";\n");
      out.write("        \t\t\tstrRsvdDtls += \"<li>Î©îÎâ¥ Í∞ÄÍ≤© : \" + dtls.menuPrc +\"</li>\";\n");
      out.write("        \t\t\tstrRsvdDtls += \"<li>Î©îÎâ¥ Ï¥ù Í∞úÏàò : \" + dtls.menuTotQty +\"</li>\";\n");
      out.write("        \t\t\tcnt += 1;\n");
      out.write("        \t\t})\n");
      out.write("        \t\t\n");
      out.write("        \t\trsvdDtlsUL.html(strRsvdDtls);\n");
      out.write("        \t\t\n");
      out.write("        \t})\n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        function showWaitRegisterForm(storeId){\n");
      out.write("        \t\n");
      out.write("        \tlet today = new Date();\n");
      out.write("        \tstrWaitRegForm = \"\";\n");
      out.write("        \tstrWaitRegForm += \"<h1>Ïò§ÌîÑÎùºÏù∏ Ïõ®Ïù¥ÌåÖ Îì±Î°ù</h1>\";\n");
      out.write("        \tstrWaitRegForm += \"<form id='waitRegForm' action='/business/manage/waiting/register' method='post'>\";\n");
      out.write("        \tstrWaitRegForm += \"Í≥†Í∞ù Ïù¥Î¶Ñ<input name='custNm' id='js_wait_custNm'> <span id='name_msg'></span></br>\";\n");
      out.write("        \tstrWaitRegForm += \"Í≥†Í∞ù Ï†ÑÌôîÎ≤àÌò∏<input name='custTelno' id='js_wait_custTelno'> <span id='phoneNum_msg'></span></br>\";\n");
      out.write("        \tstrWaitRegForm += \"Ïõ®Ïù¥ÌåÖ Ïù∏Ïõê<input name='waitPnum' id='js_wait_pnum'> <span id='pnum_msg'></span></br>\";\n");
      out.write("        \tstrWaitRegForm += \"<input name='waitRegTm' value='\"+today+\"' hidden>\";\n");
      out.write("        \tstrWaitRegForm += \"<input name='storeId' value='\"+storeId+\"' hidden>\";\n");
      out.write("        \tstrWaitRegForm += \"<button id='submit_waitRegForm' type='submit'>Ï†úÏ∂úÌïòÍ∏∞</button>\";\n");
      out.write("        \tstrWaitRegForm += \"</form>\";\n");
      out.write("        \tstrWaitRegForm += \"<h2>ÌòÑÏû¨ ÏãúÍ∞Ñ</h2>\";\n");
      out.write("        \tstrWaitRegForm += \"<h2>\"+today+\"</h2>\";\n");
      out.write("        \t\n");
      out.write("        \twaitRegFormUL.html(strWaitRegForm);\n");
      out.write("        \t\n");
      out.write("        \t/* wait register valid check*/\n");
      out.write("        \tconst wait_custNm = document.querySelector(\"#js_wait_custNm\"),\n");
      out.write("\t        \twait_phoneNum = document.querySelector(\"#js_wait_custTelno\"),\n");
      out.write("\t        \twait_pnum = document.querySelector(\"#js_wait_pnum\"),\n");
      out.write("\t        \tbtn_submit = document.querySelector(\"#submit_waitRegForm\"),\n");
      out.write("\t        \tname_msg = document.querySelector(\"#name_msg\"),\n");
      out.write("\t        \tphoneNum_msg = document.querySelector(\"#phoneNum_msg\"),\n");
      out.write("\t        \tpnum_msg = document.querySelector(\"#pnum_msg\"),\n");
      out.write("\t        \twaitRegForm = document.querySelector('#waitRegForm');\n");
      out.write("        \t\n");
      out.write("        \tconst inputList = [wait_custNm,wait_phoneNum,wait_pnum];\n");
      out.write("\n");
      out.write("\n");
      out.write("        \tnameLenCheck = function () {\n");
      out.write("        \t\tif(1 <= wait_custNm.value.length && wait_custNm.value.length <= 5)\n");
      out.write("        \t\t\treturn true;\n");
      out.write("        \t\treturn false;\n");
      out.write("        \t}\n");
      out.write("\n");
      out.write("        \tphoneNumLenCheck = function () {\n");
      out.write("        \t\tif(1 <= wait_phoneNum.value.length && wait_phoneNum.value.length <= 13)\n");
      out.write("        \t\t\treturn true;\n");
      out.write("        \t\treturn false;\n");
      out.write("        \t}\n");
      out.write("\n");
      out.write("        \tpnumSizeCheck = function () {\n");
      out.write("        \t\tif(isNaN(wait_pnum.value))\n");
      out.write("        \t\t\treturn false;\n");
      out.write("        \t\tif(1 <= parseInt(wait_pnum.value) && parseInt(wait_pnum.value) <= 10)\n");
      out.write("        \t\t\treturn true;\n");
      out.write("        \t\treturn false;\n");
      out.write("        \t}\n");
      out.write("\n");
      out.write("        \twait_custNm.addEventListener(\"focusout\", () => {\n");
      out.write("        \t\tif(1 <= wait_custNm.value.length){\n");
      out.write("        \t\t    if(nameLenCheck()){\n");
      out.write("        \t\t        name_msg.innerText = \"üôÜ‚Äç‚ôÇÔ∏è Ïù¥Î¶Ñ ÌòïÏãùÏù¥ Ï†ÅÎãπÌïòÎÑ§Ïöî.\";\n");
      out.write("        \t\t    }\n");
      out.write("        \t\t    else {\n");
      out.write("        \t\t    \tname_msg.innerText = \"üôÖ‚Äç‚ôÇÔ∏è Ïù¥Î¶Ñ Í∏∏Ïù¥Î•º Îã§Ïãú ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî. (5Ïûê Ïù¥ÎÇ¥)\";\n");
      out.write("        \t\t    }\n");
      out.write("        \t\t}\n");
      out.write("        \t})\n");
      out.write("\n");
      out.write("        \twait_phoneNum.addEventListener(\"focusout\", () => {\n");
      out.write("        \t\tif(1 <= wait_phoneNum.value.length){\n");
      out.write("        \t\t    if(phoneNumLenCheck()){\n");
      out.write("        \t\t        phoneNum_msg.innerText = \"üôÜ‚Äç‚ôÇÔ∏è Ï†ÑÌôîÎ≤àÌò∏ ÌòïÏãùÏù¥ Ï†ÅÎãπÌïòÎÑ§Ïöî!\";\n");
      out.write("        \t\t    }\n");
      out.write("        \t\t    else {\n");
      out.write("        \t\t    \tphoneNum_msg.innerText = \"üôÖ‚Äç‚ôÇÔ∏è Ï†ÑÌôîÎ≤àÌò∏ Í∏∏Ïù¥Î•º Îã§Ïãú ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî. (13Ïûê Ïù¥ÎÇ¥)\";\n");
      out.write("        \t\t    }\n");
      out.write("        \t\t}\n");
      out.write("        \t})\n");
      out.write("\n");
      out.write("        \twait_pnum.addEventListener(\"focusout\", () => {\n");
      out.write("        \t\tif(1 <= wait_pnum.value.length){\n");
      out.write("        \t\t    if(pnumSizeCheck()){\n");
      out.write("        \t\t        pnum_msg.innerText = \"üôÜ‚Äç‚ôÇÔ∏è Ïù∏ÏõêÏù¥ Ï†ÅÎãπÌï©ÎãàÎã§.\";\n");
      out.write("        \t\t    }\n");
      out.write("        \t\t    else {\n");
      out.write("        \t\t    \tpnum_msg.innerText = \"üôÖ‚Äç‚ôÇÔ∏è Ïù∏ÏõêÏù¥ ÎÑàÎ¨¥ ÎßéÍ±∞ÎÇò ÌòïÏãùÏù¥ Ï†ÅÎãπÌïòÏßÄ ÏïäÏïÑÏöî! (10Î™Ö Ïù¥ÎÇ¥)\";\n");
      out.write("        \t\t    }\n");
      out.write("        \t\t}\n");
      out.write("        \t})\n");
      out.write("\n");
      out.write("        \t// nullÏù¥Î©¥  true\n");
      out.write("        \tnullCheck = function(inputList) {\n");
      out.write("        \t    for(let i = 0; i < inputList.length; i++)\n");
      out.write("        \t        if(inputList[i].value == \"\")\n");
      out.write("        \t            return true;\n");
      out.write("        \t    \n");
      out.write("        \t    return false;\n");
      out.write("        \t}\n");
      out.write("        \t\n");
      out.write("        \tlet modalInputCustNm = modal.find(\"input[name='custNm']\"),\n");
      out.write("\t\t\tmodalInputCutsTelNo = modal.find(\"input[name='custTelno']\"),\n");
      out.write("\t\t\tmodalInputWaitPnum = modal.find(\"input[name='waitPnum']\"),\n");
      out.write("\t\t\tmodalInputCurTime = modal.find(\"input[name='curTime']\"),\n");
      out.write("\t\t\tmodalInputStoreId = modal.find(\"input[name='storeId']\");\n");
      out.write("    \t\n");
      out.write("        \tbtn_submit.addEventListener(\"click\", (e) => {\n");
      out.write("    \t\t\n");
      out.write("\t    \t\te.preventDefault();\n");
      out.write("\t    \t\t\n");
      out.write("\t    \t\tlet wait = {\n");
      out.write("\t    \t\t\t\tcustNm : modalInputCustNm.val(),\n");
      out.write("\t    \t\t\t\tcustTelno : modalInputCutsTelNo.val(),\n");
      out.write("\t    \t\t\t\tcurTime : modalInputCurTime.val(),\n");
      out.write("\t    \t\t\t\twaitPnum : modalInputWaitPnum.val(),\n");
      out.write("\t    \t\t\t\tstoreId : modalInputStoreId.val()\n");
      out.write("\t    \t\t};\n");
      out.write("\t    \t\t\n");
      out.write("\t    \t\t\n");
      out.write("\t    \t    if(nullCheck(inputList)){\n");
      out.write("\t    \t        alert(\"ÌïÑÎìúÍ∞Ä ÎπÑÏóàÏñ¥Ïöî\")\n");
      out.write("\t    \t        return;\n");
      out.write("\t    \t    }\n");
      out.write("\t    \t    \n");
      out.write("\t    \t    if(!nameLenCheck()){\n");
      out.write("\t    \t    \talert(\"üôÖÏù¥Î¶ÑÏùÑ ÌòïÏãùÏóê ÎßûÍ≤å ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî\");\n");
      out.write("\t    \t        return;\n");
      out.write("\t    \t    }\n");
      out.write("\t    \t    \n");
      out.write("\t    \t    if(!phoneNumLenCheck()){\n");
      out.write("\t    \t        alert(\"üôÖÏ†ÑÌôîÎ≤àÌò∏Î•º ÌòïÏãùÏóê ÎßûÍ≤å ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî\");\n");
      out.write("\t    \t        return;\n");
      out.write("\t    \t    }\n");
      out.write("\t    \t    \n");
      out.write("\t    \t    if(!pnumSizeCheck()){\n");
      out.write("\t    \t        alert(\"üôÖÏòàÏïΩÏù∏ÏõêÏùÑ ÌòïÏãùÏóê ÎßûÍ≤å ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî\");\n");
      out.write("\t    \t        return;\n");
      out.write("\t    \t    }\n");
      out.write("\t    \t    \n");
      out.write("\t\n");
      out.write("\t    \t\tboardService.regWait(wait, result => {\n");
      out.write("\t    \t\t\t\n");
      out.write("\t    \t\t\talert(result);\n");
      out.write("\t        \t\tconsole.log(\"Í≤∞Í≥º..........\"+modalInputStoreId.val());\n");
      out.write("\t        \t\tshowBoard(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\n");
      out.write("\t        \t\tmodal.find(\"ul\").html(\"\");\n");
      out.write("\t    \t\t\tmodal.find(\"input\").val(\"\");\n");
      out.write("\t    \t\t\tmodal.css(\"display\",\"none\");\n");
      out.write("\t    \t\t\t\n");
      out.write("\t    \t\t\t\n");
      out.write("\t    \t\t});\n");
      out.write("    \t\t\n");
      out.write("    \t\t\n");
      out.write("    \t\t});\n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        /* Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨*/\n");
      out.write("        \n");
      out.write("        /*ÌòÑÌô©Ìåê ÌÜ†Í∏Ä*/\n");
      out.write("\n");
      out.write("\t\tlet toggle = $(\".switch\");\n");
      out.write("\t\t\n");
      out.write("\t\ttoggle.on(\"click\", (e) => {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tlet storeId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("\t\t\t\n");
      out.write("\t\t\te.preventDefault();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($(\"#board\").css(\"display\") === 'none'){\n");
      out.write("\t\t\t\tconsole.log(\"board none => block\");\n");
      out.write("\t\t\t\tshowBoard(storeId);\n");
      out.write("\t\t\t\t$(\"#board\").css(\"display\", \"block\");\n");
      out.write("\t\t\t} else if($(\"#board\").css(\"display\") === 'block'){\n");
      out.write("\t\t\t\tconsole.log(\"board block => none\");\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#board\").css(\"display\", \"none\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($(\"#rsvd_rslt_baord\").css(\"display\") === 'none'){\n");
      out.write("\t\t\t\tconsole.log(\"rsvd rslt board none => block\");\n");
      out.write("\t\t\t\tshowRsvdBoard(storeId);\n");
      out.write("\t\t\t\t$(\"#rsvd_rslt_baord\").css(\"display\", \"block\");\n");
      out.write("\t\t\t} else\tif($(\"#rsvd_rslt_baord\").css(\"display\") === 'block'){\n");
      out.write("\t\t\t\tconsole.log(\"rsvd rslt board block => none\");\n");
      out.write("\t\t\t\t$(\"#rsvd_rslt_baord\").css(\"display\", \"none\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("        /*\n");
      out.write("        btn_show_board.on(\"click\", (e) => {\n");
      out.write("\t\t\tconsole.log(\"btn click.........\");\n");
      out.write("\t\t\tshowBoard(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\n");
      out.write("\t\t\t$(\"#board\").css(\"display\",\"block\");\n");
      out.write("\t\t});\n");
      out.write("\t\t*/\n");
      out.write("        /*ÎãπÏùº ÏòàÏïΩ Í≤∞Í≥º Í∞ÄÏ†∏Ïò§Í∏∞*/\n");
      out.write("        $(\"#btn_rsvd_rslt\").on(\"click\", e => {\n");
      out.write("        \tshowRsvdBoard(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /*ÏÉàÎ°úÍ≥†Ïπ®*/\n");
      out.write("        $(\"#refresh\").on(\"click\", e => {\n");
      out.write("        \tconsole.log(\"show board...\")\n");
      out.write("        \tshowBoard(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        \t/*\n");
      out.write("        \tlet storeId = $(this).children(\".btnStoreId\").textContent;\n");
      out.write("        \t\t\tuserId = $(this).children(\".btnUserId\").textContent;\n");
      out.write("        \tshowUserRsvdList(storeId, userId);\n");
      out.write("        \t*/\n");
      out.write("\n");
      out.write("        /*ÏòàÏïΩÎ¶¨Ïä§Ìä∏Ïóê ÏûàÎäî ÎÇ¥Ïö© Ï§ë, ÏòàÏïΩ ÏÉÅÏÑ∏ Î≥¥Ïó¨Ï£ºÍ∏∞*/\n");
      out.write("        /*ÌöåÏõêÏùò ÏòàÏïΩ Î¶¨Ïä§Ìä∏ Î≥¥Ïó¨Ï£ºÍ∏∞*/\n");
      out.write("        $(\".rsvdList\").on(\"click\", e => {\n");
      out.write("\n");
      out.write("        \tlet storeId = $(e.target).parent().find(\".btnStoreId\").text(),\n");
      out.write("        \t\tuserId = $(e.target).parent().find(\".btnUserId\").text();\n");
      out.write("        \t\n");
      out.write("        \tmodal.css(\"display\",\"block\");\n");
      out.write("\n");
      out.write("        \tshowUserRsvdList(storeId, userId);\n");
      out.write("        \t\n");
      out.write("        });\n");
      out.write("        \t\n");
      out.write("        /* Ïõ®Ïù¥ÌåÖ Îì±Î°ù */\n");
      out.write("        $(\".btn_wait_register\").on(\"click\", e => {\n");
      out.write("        \t\n");
      out.write("        \tmodal.css(\"display\",\"block\");\n");
      out.write("        \tshowWaitRegisterForm(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\n");
      out.write("        \t\n");
      out.write("        \t\t//$(\"#waitRegForm\").submit();        \t\t\n");
      out.write("        \t\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /* Îß§Ïû• Ï∞©ÏÑù ÏÉÅÌÉú Ï≤òÎ¶¨*/\n");
      out.write("        $(\".btn_seat_stus\").on(\"click\", e => {\n");
      out.write("\n");
      out.write("            e.preventDefault();\n");
      out.write("            \n");
      out.write("            let color = \"\";\n");
      out.write("\n");
      out.write("            if(e.target.innerHTML === 'Red')\n");
      out.write("                color = 'R';\n");
      out.write("            if(e.target.innerHTML === 'Yellow')\n");
      out.write("                color = 'Y';\n");
      out.write("            if(e.target.innerHTML === 'Green')\n");
      out.write("                color = 'G';\n");
      out.write("            \n");
      out.write("            console.log(color);\n");
      out.write("            \n");
      out.write("            let param = {};\n");
      out.write("            param.storeId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("            param.seatStusCd = color;\n");
      out.write("            \n");
      out.write("            console.log(param);\n");
      out.write("            \n");
      out.write("        \tboardService.putChangeStatusCd(param, function(result){\n");
      out.write("        \t\talert(result);\n");
      out.write("        \t});\n");
      out.write("        \t\n");
      out.write("            showBoard(param.storeId);\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /*Ïõ®Ïù¥ÌåÖ ÏûÖÏû• Ï≤òÎ¶¨*/\n");
      out.write("        $(\".btn_enter_wait\").on(\"click\", e => {\n");
      out.write("        \t\n");
      out.write("        \t/*dom ÏΩîÎìúÎäî Î≥ÄÍ≤ΩÎê† Í∞ÄÎä•ÏÑ± ÏûàÏùå*/\n");
      out.write("        \twaitId = parseInt($(\".nextWait li:eq(2)\").text().split(\":\")[1]);\n");
      out.write("\n");
      out.write("        \tboardService.putEnterWaiting(waitId, function(result){\n");
      out.write("        \t\talert(result);\n");
      out.write("        \t});\n");
      out.write("        \t\n");
      out.write("        \tshowBoard(storeId);\n");
      out.write("        })\n");
      out.write("\n");
      out.write("        /*Ïõ®Ïù¥ÌåÖ ÎÖ∏Ïáº Ï≤òÎ¶¨*/\n");
      out.write("        $(\".btn_noshow_wait\").on(\"click\", e => {\n");
      out.write("        \t\n");
      out.write("        \t/*dom ÏΩîÎìúÎäî Î≥ÄÍ≤ΩÎê† Í∞ÄÎä•ÏÑ± ÏûàÏùå*/\n");
      out.write("        \twaitId = parseInt($(\".nextWait li:eq(2)\").text().split(\":\")[1]);\n");
      out.write("\n");
      out.write("        \tboardService.putNoshowWaiting(waitId, function(result){\n");
      out.write("        \t\talert(result);\n");
      out.write("        \t});\n");
      out.write("        \t\n");
      out.write("        \tshowBoard(storeId);\n");
      out.write("        });\n");
      out.write("        \t\n");
      out.write("        \n");
      out.write("   });\n");
      out.write("\n");
      out.write("    $(document).ready(function() {\n");
      out.write("    \t\n");
      out.write("\n");
      out.write("        (function(){\n");
      out.write("            \n");
      out.write("        \tlet storeId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("            \n");
      out.write("            $.getJSON(\"/business/manage/getStoreImgs\", {storeId:storeId}, function(imgs){\n");
      out.write("                \n");
      out.write("                console.log(\"Ï¶âÏãú Ìï®Ïàò..\");\n");
      out.write("                \n");
      out.write("                console.log(imgs);\n");
      out.write("                \n");
      out.write("                let str = \"\";\n");
      out.write("                \n");
      out.write("                $(imgs).each(function(i, img){\n");
      out.write("                \t\n");
      out.write("                \tconsole.log(img);\n");
      out.write("                    \n");
      out.write("                    // image type\n");
      out.write("                    if(img.image) {\n");
      out.write("                        \n");
      out.write("                        let fileCallPath = encodeURIComponent(img.uploadPath+\"/s_\" +img.uuid + \"_\" +img.fileName);\n");
      out.write("                        \n");
      out.write("                        str += \"<li data-path='\" + img.uploadPath + \"'data-uuid='\" + img.uuid + \"'data-filename='\"\n");
      out.write("                            + img.fileName +\"'data-type='\" + img.image+\"'><div>\";\n");
      out.write("                        str += \"<img src='/display?fileName=\" + fileCallPath+\"'>\";\n");
      out.write("                        str += \"</li>\";\n");
      out.write("                        \n");
      out.write("                    } else {\n");
      out.write("                        \n");
      out.write("                        str += \"<li data-path='\" + img.uploadPath +\"' data-uuid='\" + img.uuid \n");
      out.write("                                +\"' data-filename='\" + img.fileName +\"' data-type='\" + img.image+\"'><div>\";\n");
      out.write("                        str += \"<span>\" + img.fileName+\"</span><br/>\";\n");
      out.write("                        str += \"<img src='/resources/img/attach.png'>\";\n");
      out.write("                        str += \"</div>\";\n");
      out.write("                        str += \"</li>\";\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("                \n");
      out.write("                $(\".uploadResult ul\").html(str);\n");
      out.write("                \n");
      out.write("            }); // end getjson\n");
      out.write("            \n");
      out.write("        })(); // end function\n");
      out.write("\n");
      out.write("        \n");
      out.write("        $(\".uploadResult\").on(\"click\", \"li\", function(e){\n");
      out.write("            \n");
      out.write("            console.log(\"view image\");\n");
      out.write("            \n");
      out.write("            let liObj = $(this);\n");
      out.write("            \n");
      out.write("            let path = encodeURIComponent(liObj.data(\"path\")+ \"/\" + liObj.data(\"uuid\") +\"_\" +liObj.data(\"filename\"));\n");
      out.write("            \n");
      out.write("            if(liObj.data(\"type\")){\n");
      out.write("                \n");
      out.write("                showImage(path.replace(new RegExp(/\\\\/g), \"/\"));\n");
      out.write("            } else {\n");
      out.write("                //download\n");
      out.write("                self.location = \"/download?fileName=\" + path\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        function showImage(fileCallPath) {\n");
      out.write("            \n");
      out.write("            alert(fileCallPath);\n");
      out.write("            \n");
      out.write("            $(\".bigPictureWrapper\").css(\"display\", \"flex\").show();\n");
      out.write("            \n");
      out.write("            $(\".bigPicture\")\n");
      out.write("            .html(\"<img src='/display?fileName=\" + fileCallPath +\"'>\")\n");
      out.write("            .animate({width:'100%',height:'100%'},1000);\n");
      out.write("            \n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        $(\".bigPictureWrapper\").on(\"click\",function(e){\n");
      out.write("            $(\".bigPicture\").animate({width : '0%', height : '0%'}, 1000);\n");
      out.write("            setTimeout(function(){\n");
      out.write("                $('.bigPictureWrapper').hide();\n");
      out.write("            },1000);\n");
      out.write("        })\n");
      out.write("\n");
      out.write("\n");
      out.write("        var operForm = $(\"#operForm\");\n");
      out.write("        \n");
      out.write("        $(\"button[data-oper='modify']\").on(\"click\", function(e){\n");
      out.write("            \n");
      out.write("            operForm.attr(\"action\", \"/board/modify\").submit();\n");
      out.write("            \n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        $(\"button[data-oper='list']\").on(\"click\",function(e){\n");
      out.write("            \n");
      out.write("            operForm.find(\"#bno\").remove();\n");
      out.write("            operForm.attr(\"action\",\"/board/list\");\n");
      out.write("            operForm.submit();\n");
      out.write("            \n");
      out.write("        });\n");
      out.write("        \n");
      out.write("    });\n");
      out.write("\n");
      out.write("    /* ÏûêÎèô ÏÉàÎ°úÍ≥†Ïπ® */\n");
      out.write("    /*\n");
      out.write("    function startRefresh() {\n");
      out.write("        window.location = location.href;\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    let minutes = 60;\n");
      out.write("    \n");
      out.write("    $(function() {\n");
      out.write("        setTimeout(startRefresh,minutes*5);\n");
      out.write("    });\n");
      out.write("    */\n");
      out.write("\n");
      out.write("    </script>\n");
      out.write("\t<!-- \n");
      out.write("<script>\n");
      out.write("    console.log(\"============\");\n");
      out.write("    console.log(\"get test\");\n");
      out.write("\n");
      out.write("    boardService.getStore({storeId : 101}, function(store){\n");
      out.write("        console.log(store);\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    boardService.getWaitList({storeId:101}, function(waitList){\n");
      out.write("        waitList.forEach(wait => {\n");
      out.write("            console.log(wait);\n");
      out.write("        });\n");
      out.write("    })\n");
      out.write("\n");
      out.write("    boardService.getRsvdList({storeId:101}, function(rsvdList){\n");
      out.write("        rsvdList.forEach(rsvd => {\n");
      out.write("            console.log(rsvd);\n");
      out.write("        })\n");
      out.write("    })\n");
      out.write("\n");
      out.write("    boardService.putCancelWaiting(182,function (result) {\n");
      out.write("        alert(\"ÏàòÏ†ï ÏôÑÎ£å\");\n");
      out.write("    })\n");
      out.write("\n");
      out.write("</script>\n");
      out.write(" -->\n");
      out.write(" <script src=\"/resources/js/clock.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/business/manage/manage.jsp(159,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty todayRsvdUserList}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t<h2>Ïò§Îäò ÏòàÏïΩÌïòÏã† ÏÜêÎãòÏù¥ ÏóÜÏäµÎãàÎã§.ü§£</h2>\n");
          out.write("\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/business/manage/manage.jsp(163,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty todayRsvdUserList}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\n');
          out.write('	');
          out.write('	');
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/business/manage/manage.jsp(164,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/business/manage/manage.jsp(164,2) '${todayRsvdUserList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${todayRsvdUserList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/business/manage/manage.jsp(164,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("user");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("\t\t\t\n");
            out.write("\t\t\t<div class=\"tooltip\">\n");
            out.write("\t\t\t\t==========================================</br>\n");
            out.write("\t\t\t\tÌöåÏõê ÏïÑÏù¥Îîî : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\tÌöåÏõê Ïù¥Î¶Ñ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br> \n");
            out.write("\t\t\t\tÌöåÏõê Ïù¥Î©îÏùº : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br> \n");
            out.write("\t\t\t\tÌöåÏõê Ï†ÑÌôîÎ≤àÌò∏ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.telno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\tÏÉùÎÖÑ ÏõîÏùº : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.brdt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br> \n");
            out.write("\t\t\t\tÏÑ±Î≥Ñ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.sex }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br> \n");
            out.write("\t\t\t\tÌöåÏõê ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.photoSrc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\tÌå®ÎÑêÌã∞ ÌöåÏõê Ïó¨Î∂Ä : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.pmStus}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("  \t\t\t\t<div class=\"tooltiptext\">\n");
            out.write("  \t\t\t\t\tÏòàÏïΩ Î≤àÌò∏ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.rsvdId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\t\tÎß§Ïû• Î≤àÌò∏ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.storeId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\t\tÌï´Îîú Î≤àÌò∏ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.htdlId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\t\tÏòàÏïΩ Ïù∏Ïõê : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.pnum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\t\tÏòàÏïΩ ÏÉÅÌÉú : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.stusCd }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\t\tÎì±Î°ù ÎÇ†Ïßú : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.inDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\t\tÏ¥ù Í∞ÄÍ≤© : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.totAmt }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("\t\t\t\t\tÏ¥ù Ï£ºÎ¨∏ ÏàòÎüâ : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.totQty }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</br>\n");
            out.write("  \t\t\t\t</div>\n");
            out.write("\t\t\t</div>\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
